{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OperateurService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.API_URL = 'http://localhost:8089/SpringMVC/operateur';\n  }\n  getAllOperateurs() {\n    return this.httpClient.get(`${this.API_URL}/retrieve-all-operateurs`);\n  }\n  addOperateur(operateur) {\n    return this.httpClient.post(`${this.API_URL}/add-operateur`, operateur);\n  }\n  editOperateur(operateur) {\n    return this.httpClient.put(`${this.API_URL}/modify-operateur`, operateur);\n  }\n  deleteOperateur(idOperateur) {\n    return this.httpClient.delete(`${this.API_URL}/remove-operateur/${idOperateur}`);\n  }\n  static #_ = this.ɵfac = function OperateurService_Factory(t) {\n    return new (t || OperateurService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OperateurService,\n    factory: OperateurService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["OperateurService","constructor","httpClient","API_URL","getAllOperateurs","get","addOperateur","operateur","post","editOperateur","put","deleteOperateur","idOperateur","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\MSI\\Desktop\\crud-tuto-front\\src\\app\\shared\\Service\\Operateur.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OperateurService {\n  readonly API_URL = 'http://localhost:8089/SpringMVC/operateur';\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAllOperateurs() {\n    return this.httpClient.get(`${this.API_URL}/retrieve-all-operateurs`)\n  }\n  addOperateur(operateur : any) {\n    return this.httpClient.post(`${this.API_URL}/add-operateur`, operateur)\n  }\n  editOperateur(operateur : any){\n    return this.httpClient.put(`${this.API_URL}/modify-operateur`, operateur)\n  }\n  deleteOperateur(idOperateur : any){\n    return  this.httpClient.delete(`${this.API_URL}/remove-operateur/${idOperateur}`)\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,gBAAgB;EAG3BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFrB,KAAAC,OAAO,GAAG,2CAA2C;EAEhB;EAE9CC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,OAAO,0BAA0B,CAAC;EACvE;EACAG,YAAYA,CAACC,SAAe;IAC1B,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,gBAAgB,EAAEI,SAAS,CAAC;EACzE;EACAE,aAAaA,CAACF,SAAe;IAC3B,OAAO,IAAI,CAACL,UAAU,CAACQ,GAAG,CAAC,GAAG,IAAI,CAACP,OAAO,mBAAmB,EAAEI,SAAS,CAAC;EAC3E;EACAI,eAAeA,CAACC,WAAiB;IAC/B,OAAQ,IAAI,CAACV,UAAU,CAACW,MAAM,CAAC,GAAG,IAAI,CAACV,OAAO,qBAAqBS,WAAW,EAAE,CAAC;EACnF;EAAC,QAAAE,CAAA,G;qBAhBUd,gBAAgB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBnB,gBAAgB;IAAAoB,OAAA,EAAhBpB,gBAAgB,CAAAqB,IAAA;IAAAC,UAAA,EAFf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}